{"version":3,"file":"react-restyle.cjs.development.js","sources":["../src/restyle.tsx","../src/utils.ts"],"sourcesContent":["import * as React from 'react';\n\nexport interface ClassMap {\n    [key: string]: string | undefined;\n}\n\nexport type ClassName = string | ClassMap;\ntype ClassNames = String & ClassMap;\n\nexport interface StyleMap {\n    isStyleMap: boolean;\n    [key: string]: React.CSSProperties | boolean;\n}\n\nfunction isStyleMap(\n    styles?: StyleMap | React.CSSProperties\n): styles is StyleMap {\n    let maybeMap = styles as StyleMap;\n    return maybeMap?.isStyleMap === true;\n}\n\nfunction createStyleMap(styles: Styles): StyleMap {\n    return { isStyleMap: true, ...styles };\n}\n\nexport type Style = React.CSSProperties | StyleMap;\ntype Styles = { [key: string]: React.CSSProperties };\n\nexport interface DefaultStyles {\n    rootKey?: string;\n    classes?: ClassMap | string;\n    styles?: StyleMap | React.CSSProperties;\n}\n\ninterface ComposedStyle {\n    className: ClassNames;\n    style: Styles;\n}\n\nfunction composeStyles(\n    defaultStyles: DefaultStyles,\n    props: { className?: ClassName; style?: Style }\n): ComposedStyle {\n    const rootKey = defaultStyles.rootKey || 'root';\n    const { className, style } = props;\n\n    let classes;\n    if (typeof defaultStyles.classes === 'string')\n        classes = { [rootKey]: defaultStyles.classes };\n    else classes = { ...defaultStyles.classes };\n\n    if (typeof className === 'string') classes[rootKey] = className;\n    else if (className) Object.assign(classes, className);\n\n    // use a string wrapper object for backward-compatibility with the\n    // standard className prop (`String` is coerced to `string`)\n    // eslint-disable-next-line no-new-wrappers\n    let classNames = new String(classes[rootKey] || '') as ClassNames;\n    Object.assign(classNames, classes);\n\n    let styles;\n    if (isStyleMap(defaultStyles.styles)) styles = { ...defaultStyles.styles };\n    else styles = { [rootKey]: { ...defaultStyles.styles } };\n\n    if (isStyleMap(style)) Object.assign(styles, style);\n    else if (style) styles[rootKey] = style;\n\n    return { className: classNames, style: styles as Styles };\n}\n\nexport type PropsWithStyles<P> = P & { className?: ClassNames; style?: Styles };\n\nexport interface RestyleableComponent<P = any>\n    extends React.ForwardRefExoticComponent<P & PropsWithStyles<P>> {\n    defaultStyles: DefaultStyles;\n}\n\nfunction withStyles(\n    Component: React.ComponentType,\n    defaultStyles: DefaultStyles\n) {\n    const forwardRef: Partial<RestyleableComponent> = React.forwardRef(\n        (props, ref) => {\n            if (!forwardRef.defaultStyles) {\n                forwardRef.defaultStyles = defaultStyles;\n            }\n            const { className, style } = composeStyles(\n                forwardRef.defaultStyles,\n                props\n            );\n            return (\n                <Component\n                    {...props}\n                    ref={ref}\n                    className={className}\n                    style={style}\n                />\n            );\n        }\n    );\n    forwardRef.displayName = Component.displayName || Component.name;\n    forwardRef.defaultStyles = defaultStyles;\n    return forwardRef as RestyleableComponent;\n}\n\nexport { composeStyles, withStyles, createStyleMap };\n","function removeClass(classes: string, remove: string | string[]) {\n    if (typeof remove === 'string') remove = remove.split(' ');\n    return (\n        classes\n            .split(' ')\n            .filter(c => !remove.includes(c))\n            .join(' ') + ' '\n    );\n}\n\nexport { removeClass };\n"],"names":["isStyleMap","styles","maybeMap","createStyleMap","composeStyles","defaultStyles","props","rootKey","className","style","classes","Object","assign","classNames","String","withStyles","Component","forwardRef","React","ref","displayName","name","removeClass","remove","split","filter","c","includes","join"],"mappings":"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"}